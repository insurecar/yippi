"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useDebounce;

var _hooks = require("preact/hooks");

var _callback = _interopRequireDefault(require("./callback"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function useDebounce(value, delay) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var _useState = (0, _hooks.useState)(value),
      _useState2 = _slicedToArray(_useState, 2),
      debouncedValue = _useState2[0],
      setDebouncedValue = _useState2[1];

  var _useDebouncedCallback = (0, _callback.default)(function (value) {
    return setDebouncedValue(value);
  }, delay, [value], options),
      _useDebouncedCallback2 = _slicedToArray(_useDebouncedCallback, 2),
      debouncedCallback = _useDebouncedCallback2[0],
      cancel = _useDebouncedCallback2[1];

  (0, _hooks.useEffect)(function () {
    if (debouncedValue !== value) {
      debouncedCallback(value);
    }
  });
  return [debouncedValue, cancel];
}